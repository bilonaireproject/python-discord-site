name: Build & Deploy Static Preview

on:
  pull_request:

jobs:
  build:
    name: Build Static Preview
    runs-on: ubuntu-latest

    env:
      # Configure pip to cache dependencies and do a user install
      PIP_NO_CACHE_DIR: false
      PIP_USER: 1

      # Make sure package manager does not use virtualenv
      POETRY_VIRTUALENVS_CREATE: false

      # Specify explicit paths for python dependencies and the pre-commit
      # environment so we know which directories to cache
      POETRY_CACHE_DIR: ${{ github.workspace }}/.cache/py-user-base
      PYTHONUSERBASE: ${{ github.workspace }}/.cache/py-user-base
      PRE_COMMIT_HOME: ${{ github.workspace }}/.cache/pre-commit-cache

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - run: npm install netlify-cli -g

     # Create a commit SHA-based tag for the container repositories
      - name: Create SHA Container Tag
        id: sha_tag
        run: |
          tag=$(cut -c 1-7 <<< $GITHUB_SHA)
          echo "::set-output name=tag::$tag"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build the container, including an inline cache manifest to
      # allow us to use the registry as a cache source.
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          cache-from: type=registry,ref=ghcr.io/hassanabouelela/pydis-site:latest
          cache-to: type=inline
          tags: |
            ghcr.io/hassanabouelela/pydis-site:latest
            ghcr.io/hassanabouelela/pydis-site:${{ steps.sha_tag.outputs.tag }}
          build-args: |
            git_sha=${{ github.sha }}

      - name: Extract Build From Docker Image
        run: |
          docker run --name site ghcr.io/hassanabouelela/pydis-site:${{ steps.sha_tag.outputs.tag }} \
          && docker cp site:/app/build build/

      - run: netlify login && netlify link --id ${{ secrets.NETLIFY_SITE_ID }}
      - run: netlify deploy --dir=build
